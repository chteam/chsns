
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Province table.
    /// </summary>
    [Table(Name="dbo.Province")]
    public partial class Province
        : CHSNSEntity
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Province"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Province()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _trueid;

        /// <summary>
        /// Gets or sets the trueid column value.
        /// </summary>
        [Column(Name="trueid", Storage="_trueid", DbType="bigint NOT NULL", CanBeNull=false)]
        public long Trueid
        {
            get { return _trueid; }
            set
            {
                if (_trueid != value)
                {
                    OnTrueidChanging(value);
                    OnPropertyChanging("Trueid");
                    _trueid = value;
                    OnPropertyChanged("Trueid");
                    OnTrueidChanged();
                }
            }
        }
        
        private Nullable<int> _id;

        /// <summary>
        /// Gets or sets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="int")]
        public Nullable<int> Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the name column value.
        /// </summary>
        [Column(Name="name", Storage="_name", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Trueid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueidChanging(long value);
        /// <summary>Called after Trueid has Changed.</summary>
        partial void OnTrueidChanged();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(Nullable<int> value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        #endregion
        
    }
}

