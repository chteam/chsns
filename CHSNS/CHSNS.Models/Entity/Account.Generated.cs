
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Account table.
    /// </summary>
    [Table(Name="dbo.Account")]
    public partial class Account
        : CHSNSEntity
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Account"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Account()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _iD = default(long);

        /// <summary>
        /// Gets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private string _nickname;

        /// <summary>
        /// Gets or sets the Nickname column value.
        /// </summary>
        [Column(Name="Nickname", Storage="_nickname", DbType="nvarchar(12) NOT NULL", CanBeNull=false)]
        public string Nickname
        {
            get { return _nickname; }
            set
            {
                if (_nickname != value)
                {
                    OnNicknameChanging(value);
                    OnPropertyChanging("Nickname");
                    _nickname = value;
                    OnPropertyChanged("Nickname");
                    OnNicknameChanged();
                }
            }
        }
        
        private string _email;

        /// <summary>
        /// Gets or sets the Email column value.
        /// </summary>
        [Column(Name="Email", Storage="_email", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    OnEmailChanging(value);
                    OnPropertyChanging("Email");
                    _email = value;
                    OnPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        
        private string _question;

        /// <summary>
        /// Gets or sets the Question column value.
        /// </summary>
        [Column(Name="Question", Storage="_question", DbType="nvarchar(50)")]
        public string Question
        {
            get { return _question; }
            set
            {
                if (_question != value)
                {
                    OnQuestionChanging(value);
                    OnPropertyChanging("Question");
                    _question = value;
                    OnPropertyChanged("Question");
                    OnQuestionChanged();
                }
            }
        }
        
        private string _answer;

        /// <summary>
        /// Gets or sets the Answer column value.
        /// </summary>
        [Column(Name="Answer", Storage="_answer", DbType="char(32)")]
        public string Answer
        {
            get { return _answer; }
            set
            {
                if (_answer != value)
                {
                    OnAnswerChanging(value);
                    OnPropertyChanging("Answer");
                    _answer = value;
                    OnPropertyChanged("Answer");
                    OnAnswerChanged();
                }
            }
        }
        
        private Nullable<long> _code;

        /// <summary>
        /// Gets or sets the Code column value.
        /// </summary>
        [Column(Name="Code", Storage="_code", DbType="bigint")]
        public Nullable<long> Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    OnCodeChanging(value);
                    OnPropertyChanging("Code");
                    _code = value;
                    OnPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        
        private System.DateTime _loginTime;

        /// <summary>
        /// Gets or sets the LoginTime column value.
        /// </summary>
        [Column(Name="LoginTime", Storage="_loginTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime LoginTime
        {
            get { return _loginTime; }
            set
            {
                if (_loginTime != value)
                {
                    OnLoginTimeChanging(value);
                    OnPropertyChanging("LoginTime");
                    _loginTime = value;
                    OnPropertyChanged("LoginTime");
                    OnLoginTimeChanged();
                }
            }
        }
        
        private System.DateTime _regTime;

        /// <summary>
        /// Gets or sets the RegTime column value.
        /// </summary>
        [Column(Name="RegTime", Storage="_regTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime RegTime
        {
            get { return _regTime; }
            set
            {
                if (_regTime != value)
                {
                    OnRegTimeChanging(value);
                    OnPropertyChanging("RegTime");
                    _regTime = value;
                    OnPropertyChanged("RegTime");
                    OnRegTimeChanged();
                }
            }
        }
        
        private string _truePassword;

        /// <summary>
        /// Gets or sets the TruePassword column value.
        /// </summary>
        [Column(Name="TruePassword", Storage="_truePassword", DbType="char(32) NOT NULL", CanBeNull=false)]
        public string TruePassword
        {
            get { return _truePassword; }
            set
            {
                if (_truePassword != value)
                {
                    OnTruePasswordChanging(value);
                    OnPropertyChanging("TruePassword");
                    _truePassword = value;
                    OnPropertyChanged("TruePassword");
                    OnTruePasswordChanged();
                }
            }
        }
        
        private string _trueEmail;

        /// <summary>
        /// Gets or sets the TrueEmail column value.
        /// </summary>
        [Column(Name="TrueEmail", Storage="_trueEmail", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string TrueEmail
        {
            get { return _trueEmail; }
            set
            {
                if (_trueEmail != value)
                {
                    OnTrueEmailChanging(value);
                    OnPropertyChanging("TrueEmail");
                    _trueEmail = value;
                    OnPropertyChanged("TrueEmail");
                    OnTrueEmailChanged();
                }
            }
        }
        
        private int _roles;

        /// <summary>
        /// Gets or sets the Roles column value.
        /// </summary>
        [Column(Name="Roles", Storage="_roles", DbType="int NOT NULL", CanBeNull=false)]
        public int Roles
        {
            get { return _roles; }
            set
            {
                if (_roles != value)
                {
                    OnRolesChanging(value);
                    OnPropertyChanging("Roles");
                    _roles = value;
                    OnPropertyChanged("Roles");
                    OnRolesChanged();
                }
            }
        }
        
        private string _password;

        /// <summary>
        /// Gets or sets the Password column value.
        /// </summary>
        [Column(Name="Password", Storage="_password", DbType="char(32) NOT NULL", CanBeNull=false)]
        public string Password
        {
            get { return _password; }
            set
            {
                if (_password != value)
                {
                    OnPasswordChanging(value);
                    OnPropertyChanging("Password");
                    _password = value;
                    OnPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when Nickname is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNicknameChanging(string value);
        /// <summary>Called after Nickname has Changed.</summary>
        partial void OnNicknameChanged();
        /// <summary>Called when Email is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnEmailChanging(string value);
        /// <summary>Called after Email has Changed.</summary>
        partial void OnEmailChanged();
        /// <summary>Called when Question is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnQuestionChanging(string value);
        /// <summary>Called after Question has Changed.</summary>
        partial void OnQuestionChanged();
        /// <summary>Called when Answer is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAnswerChanging(string value);
        /// <summary>Called after Answer has Changed.</summary>
        partial void OnAnswerChanged();
        /// <summary>Called when Code is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCodeChanging(Nullable<long> value);
        /// <summary>Called after Code has Changed.</summary>
        partial void OnCodeChanged();
        /// <summary>Called when LoginTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoginTimeChanging(System.DateTime value);
        /// <summary>Called after LoginTime has Changed.</summary>
        partial void OnLoginTimeChanged();
        /// <summary>Called when RegTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRegTimeChanging(System.DateTime value);
        /// <summary>Called after RegTime has Changed.</summary>
        partial void OnRegTimeChanged();
        /// <summary>Called when TruePassword is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTruePasswordChanging(string value);
        /// <summary>Called after TruePassword has Changed.</summary>
        partial void OnTruePasswordChanged();
        /// <summary>Called when TrueEmail is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueEmailChanging(string value);
        /// <summary>Called after TrueEmail has Changed.</summary>
        partial void OnTrueEmailChanged();
        /// <summary>Called when Roles is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRolesChanging(int value);
        /// <summary>Called after Roles has Changed.</summary>
        partial void OnRolesChanged();
        /// <summary>Called when Password is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPasswordChanging(string value);
        /// <summary>Called after Password has Changed.</summary>
        partial void OnPasswordChanged();
        #endregion
        
    }
}

