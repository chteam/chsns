
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;

namespace CHSNS.Models
{
    /// <summary>
    /// The DataContext class for the C:\CHSNS\DataBases\CHSNSDB.s3db database.
    /// </summary>
    public partial class CChsnsDatabasesChsnsdbS3dbdatacontext : DataContext
    {
        private static MappingSource mappingCache = new AttributeMappingSource();
        
        #region Constructors
        /// <summary>
        /// Initializes the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute]
        static CChsnsDatabasesChsnsdbS3dbdatacontext()
        { }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute]
        public CChsnsDatabasesChsnsdbS3dbdatacontext()
            : base(Properties.Settings.Default.CChsnsDatabasesChsnsdbS3dbConnectionString, mappingCache)
        {
            OnCreated();
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        /// <param name="connection">The connection string.</param>
        [DebuggerNonUserCodeAttribute]
        public CChsnsDatabasesChsnsdbS3dbdatacontext(string connection)
            : base(connection, mappingCache)
        {
            OnCreated();
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        /// <param name="connection">The database connection.</param>
        [DebuggerNonUserCodeAttribute]
        public CChsnsDatabasesChsnsdbS3dbdatacontext(IDbConnection connection)
            : base(connection, mappingCache)
        {
            OnCreated();
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        /// <param name="connection">The connection string.</param>
        /// <param name="mappingSource">The mapping source.</param>
        [DebuggerNonUserCodeAttribute]
        public CChsnsDatabasesChsnsdbS3dbdatacontext(string connection, MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            OnCreated();
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CChsnsDatabasesChsnsdbS3dbdatacontext"/> class.
        /// </summary>
        /// <param name="connection">The database connection.</param>
        /// <param name="mappingSource">The mapping source.</param>
        [DebuggerNonUserCodeAttribute]
        public CChsnsDatabasesChsnsdbS3dbdatacontext(IDbConnection connection, MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            OnCreated();
        }
        #endregion
        
        #region Tables
        /// <summary>Represents the Account table in the underlying database.</summary>
        public Table<Account> Account
        {
            get { return GetTable<Account>(); }
        }
        
        #endregion

        #region Functions
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called after this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called before a Account is inserted.</summary>
        /// <param name="instance">The instance.</param>
        partial void InsertAccount(Account instance);
        /// <summary>Called before a Account is updated.</summary>
        /// <param name="instance">The instance.</param>
        partial void UpdateAccount(Account instance);
        /// <summary>Called before a Account is deleted.</summary>
        /// <param name="instance">The instance.</param>
        partial void DeleteAccount(Account instance);
        #endregion
    }
}

