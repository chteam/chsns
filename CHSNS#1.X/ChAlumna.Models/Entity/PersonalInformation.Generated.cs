
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.PersonalInformation table.
    /// </summary>
    [Table(Name="dbo.PersonalInformation")]
    public partial class PersonalInformation
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonalInformation"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public PersonalInformation()
        {
            OnCreated();
            _profile = default(EntityRef<Profile>);
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _userid;

        /// <summary>
        /// Gets or sets the userid column value.
        /// </summary>
        [Column(Name="userid", Storage="_userid", DbType="bigint NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public long Userid
        {
            get { return _userid; }
            set
            {
                if (_userid != value)
                {
                    if (_profile.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnUseridChanging(value);
                    OnPropertyChanging("Userid");
                    _userid = value;
                    OnPropertyChanged("Userid");
                    OnUseridChanged();
                }
            }
        }
        
        private string _loveLike;

        /// <summary>
        /// Gets or sets the LoveLike column value.
        /// </summary>
        [Column(Name="LoveLike", Storage="_loveLike", DbType="nvarchar(255)")]
        public string LoveLike
        {
            get { return _loveLike; }
            set
            {
                if (_loveLike != value)
                {
                    OnLoveLikeChanging(value);
                    OnPropertyChanging("LoveLike");
                    _loveLike = value;
                    OnPropertyChanged("LoveLike");
                    OnLoveLikeChanged();
                }
            }
        }
        
        private string _loveBook;

        /// <summary>
        /// Gets or sets the LoveBook column value.
        /// </summary>
        [Column(Name="LoveBook", Storage="_loveBook", DbType="nvarchar(255)")]
        public string LoveBook
        {
            get { return _loveBook; }
            set
            {
                if (_loveBook != value)
                {
                    OnLoveBookChanging(value);
                    OnPropertyChanging("LoveBook");
                    _loveBook = value;
                    OnPropertyChanged("LoveBook");
                    OnLoveBookChanged();
                }
            }
        }
        
        private string _loveMusic;

        /// <summary>
        /// Gets or sets the LoveMusic column value.
        /// </summary>
        [Column(Name="LoveMusic", Storage="_loveMusic", DbType="nvarchar(255)")]
        public string LoveMusic
        {
            get { return _loveMusic; }
            set
            {
                if (_loveMusic != value)
                {
                    OnLoveMusicChanging(value);
                    OnPropertyChanging("LoveMusic");
                    _loveMusic = value;
                    OnPropertyChanged("LoveMusic");
                    OnLoveMusicChanged();
                }
            }
        }
        
        private string _loveMovie;

        /// <summary>
        /// Gets or sets the LoveMovie column value.
        /// </summary>
        [Column(Name="LoveMovie", Storage="_loveMovie", DbType="nvarchar(255)")]
        public string LoveMovie
        {
            get { return _loveMovie; }
            set
            {
                if (_loveMovie != value)
                {
                    OnLoveMovieChanging(value);
                    OnPropertyChanging("LoveMovie");
                    _loveMovie = value;
                    OnPropertyChanged("LoveMovie");
                    OnLoveMovieChanged();
                }
            }
        }
        
        private string _loveSports;

        /// <summary>
        /// Gets or sets the LoveSports column value.
        /// </summary>
        [Column(Name="LoveSports", Storage="_loveSports", DbType="nvarchar(255)")]
        public string LoveSports
        {
            get { return _loveSports; }
            set
            {
                if (_loveSports != value)
                {
                    OnLoveSportsChanging(value);
                    OnPropertyChanging("LoveSports");
                    _loveSports = value;
                    OnPropertyChanged("LoveSports");
                    OnLoveSportsChanged();
                }
            }
        }
        
        private string _loveGame;

        /// <summary>
        /// Gets or sets the LoveGame column value.
        /// </summary>
        [Column(Name="LoveGame", Storage="_loveGame", DbType="nvarchar(255)")]
        public string LoveGame
        {
            get { return _loveGame; }
            set
            {
                if (_loveGame != value)
                {
                    OnLoveGameChanging(value);
                    OnPropertyChanging("LoveGame");
                    _loveGame = value;
                    OnPropertyChanged("LoveGame");
                    OnLoveGameChanged();
                }
            }
        }
        
        private string _loveComic;

        /// <summary>
        /// Gets or sets the LoveComic column value.
        /// </summary>
        [Column(Name="LoveComic", Storage="_loveComic", DbType="nvarchar(255)")]
        public string LoveComic
        {
            get { return _loveComic; }
            set
            {
                if (_loveComic != value)
                {
                    OnLoveComicChanging(value);
                    OnPropertyChanging("LoveComic");
                    _loveComic = value;
                    OnPropertyChanged("LoveComic");
                    OnLoveComicChanged();
                }
            }
        }
        
        private string _joinSociety;

        /// <summary>
        /// Gets or sets the JoinSociety column value.
        /// </summary>
        [Column(Name="JoinSociety", Storage="_joinSociety", DbType="nvarchar(255)")]
        public string JoinSociety
        {
            get { return _joinSociety; }
            set
            {
                if (_joinSociety != value)
                {
                    OnJoinSocietyChanging(value);
                    OnPropertyChanging("JoinSociety");
                    _joinSociety = value;
                    OnPropertyChanged("JoinSociety");
                    OnJoinSocietyChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntityRef<Profile> _profile;

        /// <summary>
        /// Gets or sets the Profile association.
        /// </summary>
        [Association(Name="FK_PersonalInformation_Profile", Storage="_profile", ThisKey="Userid", OtherKey="UserID", IsForeignKey=true)]
        public Profile Profile
        {
            get { return _profile.Entity; }
            set
            {
                Profile previousValue = _profile.Entity;
                if (previousValue != value || _profile.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Profile");
                    if (previousValue != null)
                    {
                        _profile.Entity = null;
                        previousValue.PersonalInformation = null;
                    }
                    _profile.Entity = value;
                    if (value != null)
                    {
                        value.PersonalInformation = this;
                        _userid = value.UserID;
                    }
                    else
                    {
                        _userid = default(long);
                    }
                    OnPropertyChanged("Profile");
                }
            }
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Userid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUseridChanging(long value);
        /// <summary>Called after Userid has Changed.</summary>
        partial void OnUseridChanged();
        /// <summary>Called when LoveLike is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveLikeChanging(string value);
        /// <summary>Called after LoveLike has Changed.</summary>
        partial void OnLoveLikeChanged();
        /// <summary>Called when LoveBook is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveBookChanging(string value);
        /// <summary>Called after LoveBook has Changed.</summary>
        partial void OnLoveBookChanged();
        /// <summary>Called when LoveMusic is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveMusicChanging(string value);
        /// <summary>Called after LoveMusic has Changed.</summary>
        partial void OnLoveMusicChanged();
        /// <summary>Called when LoveMovie is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveMovieChanging(string value);
        /// <summary>Called after LoveMovie has Changed.</summary>
        partial void OnLoveMovieChanged();
        /// <summary>Called when LoveSports is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveSportsChanging(string value);
        /// <summary>Called after LoveSports has Changed.</summary>
        partial void OnLoveSportsChanged();
        /// <summary>Called when LoveGame is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveGameChanging(string value);
        /// <summary>Called after LoveGame has Changed.</summary>
        partial void OnLoveGameChanged();
        /// <summary>Called when LoveComic is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLoveComicChanging(string value);
        /// <summary>Called after LoveComic has Changed.</summary>
        partial void OnLoveComicChanged();
        /// <summary>Called when JoinSociety is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnJoinSocietyChanging(string value);
        /// <summary>Called after JoinSociety has Changed.</summary>
        partial void OnJoinSocietyChanged();
        #endregion
        
    }
}

