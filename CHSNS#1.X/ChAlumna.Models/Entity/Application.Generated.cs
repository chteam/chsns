
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Application table.
    /// </summary>
    [Table(Name="dbo.Application")]
    public partial class Application
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Application"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Application()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _vision;

        /// <summary>
        /// Gets or sets the Vision column value.
        /// </summary>
        [Column(Name="Vision", Storage="_vision", DbType="nvarchar(20) NOT NULL", CanBeNull=false)]
        public string Vision
        {
            get { return _vision; }
            set
            {
                if (_vision != value)
                {
                    OnVisionChanging(value);
                    OnPropertyChanging("Vision");
                    _vision = value;
                    OnPropertyChanged("Vision");
                    OnVisionChanged();
                }
            }
        }
        
        private Nullable<long> _authorid;

        /// <summary>
        /// Gets or sets the Authorid column value.
        /// </summary>
        [Column(Name="Authorid", Storage="_authorid", DbType="bigint")]
        public Nullable<long> Authorid
        {
            get { return _authorid; }
            set
            {
                if (_authorid != value)
                {
                    OnAuthoridChanging(value);
                    OnPropertyChanging("Authorid");
                    _authorid = value;
                    OnPropertyChanged("Authorid");
                    OnAuthoridChanged();
                }
            }
        }
        
        private System.DateTime _addtime;

        /// <summary>
        /// Gets or sets the Addtime column value.
        /// </summary>
        [Column(Name="Addtime", Storage="_addtime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Addtime
        {
            get { return _addtime; }
            set
            {
                if (_addtime != value)
                {
                    OnAddtimeChanging(value);
                    OnPropertyChanging("Addtime");
                    _addtime = value;
                    OnPropertyChanged("Addtime");
                    OnAddtimeChanged();
                }
            }
        }
        
        private System.DateTime _edittime;

        /// <summary>
        /// Gets or sets the Edittime column value.
        /// </summary>
        [Column(Name="Edittime", Storage="_edittime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Edittime
        {
            get { return _edittime; }
            set
            {
                if (_edittime != value)
                {
                    OnEdittimeChanging(value);
                    OnPropertyChanging("Edittime");
                    _edittime = value;
                    OnPropertyChanged("Edittime");
                    OnEdittimeChanged();
                }
            }
        }
        
        private string _description;

        /// <summary>
        /// Gets or sets the Description column value.
        /// </summary>
        [Column(Name="Description", Storage="_description", DbType="ntext NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _description = value;
                    OnPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        
        private string _descriptionUrl;

        /// <summary>
        /// Gets or sets the DescriptionUrl column value.
        /// </summary>
        [Column(Name="DescriptionUrl", Storage="_descriptionUrl", DbType="nvarchar(250)")]
        public string DescriptionUrl
        {
            get { return _descriptionUrl; }
            set
            {
                if (_descriptionUrl != value)
                {
                    OnDescriptionUrlChanging(value);
                    OnPropertyChanging("DescriptionUrl");
                    _descriptionUrl = value;
                    OnPropertyChanged("DescriptionUrl");
                    OnDescriptionUrlChanged();
                }
            }
        }
        
        private long _userCount;

        /// <summary>
        /// Gets or sets the UserCount column value.
        /// </summary>
        [Column(Name="UserCount", Storage="_userCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long UserCount
        {
            get { return _userCount; }
            set
            {
                if (_userCount != value)
                {
                    OnUserCountChanging(value);
                    OnPropertyChanging("UserCount");
                    _userCount = value;
                    OnPropertyChanged("UserCount");
                    OnUserCountChanged();
                }
            }
        }
        
        private long _iD = default(long);

        /// <summary>
        /// Gets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private string _controller;

        /// <summary>
        /// Gets or sets the Controller column value.
        /// </summary>
        [Column(Name="Controller", Storage="_controller", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Controller
        {
            get { return _controller; }
            set
            {
                if (_controller != value)
                {
                    OnControllerChanging(value);
                    OnPropertyChanging("Controller");
                    _controller = value;
                    OnPropertyChanged("Controller");
                    OnControllerChanged();
                }
            }
        }
        
        private string _action;

        /// <summary>
        /// Gets or sets the Action column value.
        /// </summary>
        [Column(Name="Action", Storage="_action", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Action
        {
            get { return _action; }
            set
            {
                if (_action != value)
                {
                    OnActionChanging(value);
                    OnPropertyChanging("Action");
                    _action = value;
                    OnPropertyChanged("Action");
                    OnActionChanged();
                }
            }
        }
        
        private string _paramStr;

        /// <summary>
        /// Gets or sets the ParamStr column value.
        /// </summary>
        [Column(Name="ParamStr", Storage="_paramStr", DbType="nvarchar(250) NOT NULL", CanBeNull=false)]
        public string ParamStr
        {
            get { return _paramStr; }
            set
            {
                if (_paramStr != value)
                {
                    OnParamStrChanging(value);
                    OnPropertyChanging("ParamStr");
                    _paramStr = value;
                    OnPropertyChanged("ParamStr");
                    OnParamStrChanged();
                }
            }
        }
        
        private string _className;

        /// <summary>
        /// Gets or sets the ClassName column value.
        /// </summary>
        [Column(Name="ClassName", Storage="_className", DbType="varchar(50) NOT NULL", CanBeNull=false)]
        public string ClassName
        {
            get { return _className; }
            set
            {
                if (_className != value)
                {
                    OnClassNameChanging(value);
                    OnPropertyChanging("ClassName");
                    _className = value;
                    OnPropertyChanged("ClassName");
                    OnClassNameChanged();
                }
            }
        }
        
        private string _fullName;

        /// <summary>
        /// Gets or sets the FullName column value.
        /// </summary>
        [Column(Name="FullName", Storage="_fullName", DbType="nvarchar(60) NOT NULL", CanBeNull=false)]
        public string FullName
        {
            get { return _fullName; }
            set
            {
                if (_fullName != value)
                {
                    OnFullNameChanging(value);
                    OnPropertyChanging("FullName");
                    _fullName = value;
                    OnPropertyChanged("FullName");
                    OnFullNameChanged();
                }
            }
        }
        
        private string _shortName;

        /// <summary>
        /// Gets or sets the ShortName column value.
        /// </summary>
        [Column(Name="ShortName", Storage="_shortName", DbType="nvarchar(20) NOT NULL", CanBeNull=false)]
        public string ShortName
        {
            get { return _shortName; }
            set
            {
                if (_shortName != value)
                {
                    OnShortNameChanging(value);
                    OnPropertyChanging("ShortName");
                    _shortName = value;
                    OnPropertyChanged("ShortName");
                    OnShortNameChanged();
                }
            }
        }
        
        private string _icon;

        /// <summary>
        /// Gets or sets the Icon column value.
        /// </summary>
        [Column(Name="Icon", Storage="_icon", DbType="nvarchar(250)")]
        public string Icon
        {
            get { return _icon; }
            set
            {
                if (_icon != value)
                {
                    OnIconChanging(value);
                    OnPropertyChanging("Icon");
                    _icon = value;
                    OnPropertyChanged("Icon");
                    OnIconChanged();
                }
            }
        }
        
        private bool _isSystem;

        /// <summary>
        /// Gets or sets the IsSystem column value.
        /// </summary>
        [Column(Name="IsSystem", Storage="_isSystem", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsSystem
        {
            get { return _isSystem; }
            set
            {
                if (_isSystem != value)
                {
                    OnIsSystemChanging(value);
                    OnPropertyChanging("IsSystem");
                    _isSystem = value;
                    OnPropertyChanged("IsSystem");
                    OnIsSystemChanged();
                }
            }
        }
        
        private bool _isTrue;

        /// <summary>
        /// Gets or sets the IsTrue column value.
        /// </summary>
        [Column(Name="IsTrue", Storage="_isTrue", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsTrue
        {
            get { return _isTrue; }
            set
            {
                if (_isTrue != value)
                {
                    OnIsTrueChanging(value);
                    OnPropertyChanging("IsTrue");
                    _isTrue = value;
                    OnPropertyChanged("IsTrue");
                    OnIsTrueChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Vision is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnVisionChanging(string value);
        /// <summary>Called after Vision has Changed.</summary>
        partial void OnVisionChanged();
        /// <summary>Called when Authorid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAuthoridChanging(Nullable<long> value);
        /// <summary>Called after Authorid has Changed.</summary>
        partial void OnAuthoridChanged();
        /// <summary>Called when Addtime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddtimeChanging(System.DateTime value);
        /// <summary>Called after Addtime has Changed.</summary>
        partial void OnAddtimeChanged();
        /// <summary>Called when Edittime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnEdittimeChanging(System.DateTime value);
        /// <summary>Called after Edittime has Changed.</summary>
        partial void OnEdittimeChanged();
        /// <summary>Called when Description is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescriptionChanging(string value);
        /// <summary>Called after Description has Changed.</summary>
        partial void OnDescriptionChanged();
        /// <summary>Called when DescriptionUrl is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescriptionUrlChanging(string value);
        /// <summary>Called after DescriptionUrl has Changed.</summary>
        partial void OnDescriptionUrlChanged();
        /// <summary>Called when UserCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUserCountChanging(long value);
        /// <summary>Called after UserCount has Changed.</summary>
        partial void OnUserCountChanged();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when Controller is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnControllerChanging(string value);
        /// <summary>Called after Controller has Changed.</summary>
        partial void OnControllerChanged();
        /// <summary>Called when Action is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnActionChanging(string value);
        /// <summary>Called after Action has Changed.</summary>
        partial void OnActionChanged();
        /// <summary>Called when ParamStr is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnParamStrChanging(string value);
        /// <summary>Called after ParamStr has Changed.</summary>
        partial void OnParamStrChanged();
        /// <summary>Called when ClassName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnClassNameChanging(string value);
        /// <summary>Called after ClassName has Changed.</summary>
        partial void OnClassNameChanged();
        /// <summary>Called when FullName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFullNameChanging(string value);
        /// <summary>Called after FullName has Changed.</summary>
        partial void OnFullNameChanged();
        /// <summary>Called when ShortName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShortNameChanging(string value);
        /// <summary>Called after ShortName has Changed.</summary>
        partial void OnShortNameChanged();
        /// <summary>Called when Icon is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIconChanging(string value);
        /// <summary>Called after Icon has Changed.</summary>
        partial void OnIconChanged();
        /// <summary>Called when IsSystem is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsSystemChanging(bool value);
        /// <summary>Called after IsSystem has Changed.</summary>
        partial void OnIsSystemChanged();
        /// <summary>Called when IsTrue is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsTrueChanging(bool value);
        /// <summary>Called after IsTrue has Changed.</summary>
        partial void OnIsTrueChanged();
        #endregion
        
    }
}

