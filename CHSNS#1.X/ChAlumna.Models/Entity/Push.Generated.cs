
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Push table.
    /// </summary>
    [Table(Name="dbo.Push")]
    public partial class Push
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Push"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Push()
        {
            OnCreated();
            _log = default(EntityRef<Note>);
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _id = default(long);

        /// <summary>
        /// Gets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private long _logid;

        /// <summary>
        /// Gets or sets the Logid column value.
        /// </summary>
        [Column(Name="Logid", Storage="_logid", DbType="bigint NOT NULL", CanBeNull=false)]
        public long Logid
        {
            get { return _logid; }
            set
            {
                if (_logid != value)
                {
                    if (_log.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnLogidChanging(value);
                    OnPropertyChanging("Logid");
                    _logid = value;
                    OnPropertyChanged("Logid");
                    OnLogidChanged();
                }
            }
        }
        
        private long _userid;

        /// <summary>
        /// Gets or sets the userid column value.
        /// </summary>
        [Column(Name="userid", Storage="_userid", DbType="bigint NOT NULL", CanBeNull=false)]
        public long Userid
        {
            get { return _userid; }
            set
            {
                if (_userid != value)
                {
                    OnUseridChanging(value);
                    OnPropertyChanging("Userid");
                    _userid = value;
                    OnPropertyChanged("Userid");
                    OnUseridChanged();
                }
            }
        }
        
        private System.DateTime _pushTime;

        /// <summary>
        /// Gets or sets the PushTime column value.
        /// </summary>
        [Column(Name="PushTime", Storage="_pushTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime PushTime
        {
            get { return _pushTime; }
            set
            {
                if (_pushTime != value)
                {
                    OnPushTimeChanging(value);
                    OnPropertyChanging("PushTime");
                    _pushTime = value;
                    OnPropertyChanged("PushTime");
                    OnPushTimeChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntityRef<Note> _log;

        /// <summary>
        /// Gets or sets the Log association.
        /// </summary>
        [Association(Name="FK_Push_Log", Storage="_log", ThisKey="Logid", OtherKey="Id", IsForeignKey=true)]
        public Note Log
        {
            get { return _log.Entity; }
            set
            {
                Note previousValue = _log.Entity;
                if (previousValue != value || _log.HasLoadedOrAssignedValue == false)
                {
                    OnPropertyChanging("Log");
                    if (previousValue != null)
                    {
                        _log.Entity = null;
                        previousValue.PushList.Remove(this);
                    }
                    _log.Entity = value;
                    if (value != null)
                    {
                        value.PushList.Add(this);
                        _logid = value.ID;
                    }
                    else
                    {
                        _logid = default(long);
                    }
                    OnPropertyChanged("Log");
                }
            }
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(long value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when Logid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLogidChanging(long value);
        /// <summary>Called after Logid has Changed.</summary>
        partial void OnLogidChanged();
        /// <summary>Called when Userid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUseridChanging(long value);
        /// <summary>Called after Userid has Changed.</summary>
        partial void OnUseridChanged();
        /// <summary>Called when PushTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPushTimeChanging(System.DateTime value);
        /// <summary>Called after PushTime has Changed.</summary>
        partial void OnPushTimeChanged();
        #endregion
        
    }
}

