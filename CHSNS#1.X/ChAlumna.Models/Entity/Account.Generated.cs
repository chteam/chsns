
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Account table.
    /// </summary>
    [Table(Name="dbo.Account")]
    public partial class Account
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Account"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Account()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _id = default(long);

        /// <summary>
        /// Gets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private Nullable<long> _userid;

        /// <summary>
        /// Gets or sets the userid column value.
        /// </summary>
        [Column(Name="userid", Storage="_userid", DbType="bigint")]
        public Nullable<long> UserID
        {
            get { return _userid; }
            set
            {
                if (_userid != value)
                {
                    OnUseridChanging(value);
                    OnPropertyChanging("Userid");
                    _userid = value;
                    OnPropertyChanged("Userid");
                    OnUseridChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the name column value.
        /// </summary>
        [Column(Name="name", Storage="_name", DbType="nvarchar(12) NOT NULL", CanBeNull=false)]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private string _email;

        /// <summary>
        /// Gets or sets the email column value.
        /// </summary>
        [Column(Name="email", Storage="_email", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    OnEmailChanging(value);
                    OnPropertyChanging("Email");
                    _email = value;
                    OnPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        
        private string _password;

        /// <summary>
        /// Gets or sets the password column value.
        /// </summary>
        [Column(Name="password", Storage="_password", DbType="char(32) NOT NULL", CanBeNull=false)]
        public string Password
        {
            get { return _password; }
            set
            {
                if (_password != value)
                {
                    OnPasswordChanging(value);
                    OnPropertyChanging("Password");
                    _password = value;
                    OnPropertyChanged("Password");
                    OnPasswordChanged();
                }
            }
        }
        
        private string _question;

        /// <summary>
        /// Gets or sets the question column value.
        /// </summary>
        [Column(Name="question", Storage="_question", DbType="nvarchar(50)")]
        public string Question
        {
            get { return _question; }
            set
            {
                if (_question != value)
                {
                    OnQuestionChanging(value);
                    OnPropertyChanging("Question");
                    _question = value;
                    OnPropertyChanged("Question");
                    OnQuestionChanged();
                }
            }
        }
        
        private string _answer;

        /// <summary>
        /// Gets or sets the answer column value.
        /// </summary>
        [Column(Name="answer", Storage="_answer", DbType="char(32)")]
        public string Answer
        {
            get { return _answer; }
            set
            {
                if (_answer != value)
                {
                    OnAnswerChanging(value);
                    OnPropertyChanging("Answer");
                    _answer = value;
                    OnPropertyChanged("Answer");
                    OnAnswerChanged();
                }
            }
        }
        
        private Nullable<long> _code;

        /// <summary>
        /// Gets or sets the code column value.
        /// </summary>
        [Column(Name="code", Storage="_code", DbType="bigint")]
        public Nullable<long> Code
        {
            get { return _code; }
            set
            {
                if (_code != value)
                {
                    OnCodeChanging(value);
                    OnPropertyChanging("Code");
                    _code = value;
                    OnPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        
        private System.DateTime _logintime;

        /// <summary>
        /// Gets or sets the logintime column value.
        /// </summary>
        [Column(Name="logintime", Storage="_logintime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Logintime
        {
            get { return _logintime; }
            set
            {
                if (_logintime != value)
                {
                    OnLogintimeChanging(value);
                    OnPropertyChanging("Logintime");
                    _logintime = value;
                    OnPropertyChanged("Logintime");
                    OnLogintimeChanged();
                }
            }
        }
        
        private System.DateTime _regtime;

        /// <summary>
        /// Gets or sets the regtime column value.
        /// </summary>
        [Column(Name="regtime", Storage="_regtime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime RegTime
        {
            get { return _regtime; }
            set
            {
                if (_regtime != value)
                {
                    OnRegtimeChanging(value);
                    OnPropertyChanging("Regtime");
                    _regtime = value;
                    OnPropertyChanged("Regtime");
                    OnRegtimeChanged();
                }
            }
        }
        
        private string _truepassword;

        /// <summary>
        /// Gets or sets the truepassword column value.
        /// </summary>
        [Column(Name="truepassword", Storage="_truepassword", DbType="char(32) NOT NULL", CanBeNull=false)]
        public string Truepassword
        {
            get { return _truepassword; }
            set
            {
                if (_truepassword != value)
                {
                    OnTruepasswordChanging(value);
                    OnPropertyChanging("Truepassword");
                    _truepassword = value;
                    OnPropertyChanged("Truepassword");
                    OnTruepasswordChanged();
                }
            }
        }
        
        private string _trueemail;

        /// <summary>
        /// Gets or sets the trueemail column value.
        /// </summary>
        [Column(Name="trueemail", Storage="_trueemail", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Trueemail
        {
            get { return _trueemail; }
            set
            {
                if (_trueemail != value)
                {
                    OnTrueemailChanging(value);
                    OnPropertyChanging("Trueemail");
                    _trueemail = value;
                    OnPropertyChanged("Trueemail");
                    OnTrueemailChanged();
                }
            }
        }
        
        private int _status;

        /// <summary>
        /// Gets or sets the status column value.
        /// </summary>
        [Column(Name="status", Storage="_status", DbType="int NOT NULL", CanBeNull=false)]
        public int Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _status = value;
                    OnPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(long value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when Userid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUseridChanging(Nullable<long> value);
        /// <summary>Called after Userid has Changed.</summary>
        partial void OnUseridChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Email is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnEmailChanging(string value);
        /// <summary>Called after Email has Changed.</summary>
        partial void OnEmailChanged();
        /// <summary>Called when Password is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPasswordChanging(string value);
        /// <summary>Called after Password has Changed.</summary>
        partial void OnPasswordChanged();
        /// <summary>Called when Question is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnQuestionChanging(string value);
        /// <summary>Called after Question has Changed.</summary>
        partial void OnQuestionChanged();
        /// <summary>Called when Answer is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAnswerChanging(string value);
        /// <summary>Called after Answer has Changed.</summary>
        partial void OnAnswerChanged();
        /// <summary>Called when Code is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCodeChanging(Nullable<long> value);
        /// <summary>Called after Code has Changed.</summary>
        partial void OnCodeChanged();
        /// <summary>Called when Logintime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLogintimeChanging(System.DateTime value);
        /// <summary>Called after Logintime has Changed.</summary>
        partial void OnLogintimeChanged();
        /// <summary>Called when Regtime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnRegtimeChanging(System.DateTime value);
        /// <summary>Called after Regtime has Changed.</summary>
        partial void OnRegtimeChanged();
        /// <summary>Called when Truepassword is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTruepasswordChanging(string value);
        /// <summary>Called after Truepassword has Changed.</summary>
        partial void OnTruepasswordChanged();
        /// <summary>Called when Trueemail is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueemailChanging(string value);
        /// <summary>Called after Trueemail has Changed.</summary>
        partial void OnTrueemailChanged();
        /// <summary>Called when Status is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStatusChanging(int value);
        /// <summary>Called after Status has Changed.</summary>
        partial void OnStatusChanged();
        #endregion
        
    }
}

