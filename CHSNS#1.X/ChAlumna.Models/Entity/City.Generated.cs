
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.City table.
    /// </summary>
    [Table(Name="dbo.City")]
    public partial class City
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="City"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public City()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _iD;

        /// <summary>
        /// Gets or sets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL", IsPrimaryKey=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the Name column value.
        /// </summary>
        [Column(Name="Name", Storage="_name", DbType="nvarchar(20) NOT NULL", CanBeNull=false)]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private int _pID;

        /// <summary>
        /// Gets or sets the PID column value.
        /// </summary>
        [Column(Name="PID", Storage="_pID", DbType="int NOT NULL", CanBeNull=false)]
        public int PID
        {
            get { return _pID; }
            set
            {
                if (_pID != value)
                {
                    OnPIDChanging(value);
                    OnPropertyChanging("PID");
                    _pID = value;
                    OnPropertyChanged("PID");
                    OnPIDChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when PID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPIDChanging(int value);
        /// <summary>Called after PID has Changed.</summary>
        partial void OnPIDChanged();
        #endregion
        
    }
}

