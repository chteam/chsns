
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Group table.
    /// </summary>
    [Table(Name="dbo.Group")]
    public partial class Group
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Group"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Group()
        {
            OnCreated();
            _groupUserList = new EntitySet<GroupUser>(
                new System.Action<GroupUser>(this.Attach_GroupUserList),
                new System.Action<GroupUser>(this.Detach_GroupUserList));
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _trueid = default(long);

        /// <summary>
        /// Gets the trueid column value.
        /// </summary>
        [Column(Name="trueid", Storage="_trueid", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long Trueid
        {
            get { return _trueid; }
            set
            {
                if (_trueid != value)
                {
                    OnTrueidChanging(value);
                    OnPropertyChanging("Trueid");
                    _trueid = value;
                    OnPropertyChanged("Trueid");
                    OnTrueidChanged();
                }
            }
        }
        
        private long _id;

        /// <summary>
        /// Gets or sets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ID
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private string _groupName;

        /// <summary>
        /// Gets or sets the GroupName column value.
        /// </summary>
        [Column(Name="GroupName", Storage="_groupName", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string GroupName
        {
            get { return _groupName; }
            set
            {
                if (_groupName != value)
                {
                    OnGroupNameChanging(value);
                    OnPropertyChanging("GroupName");
                    _groupName = value;
                    OnPropertyChanged("GroupName");
                    OnGroupNameChanged();
                }
            }
        }
        
        private string _summmary;

        /// <summary>
        /// Gets or sets the summmary column value.
        /// </summary>
        [Column(Name="summmary", Storage="_summmary", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Summmary
        {
            get { return _summmary; }
            set
            {
                if (_summmary != value)
                {
                    OnSummmaryChanging(value);
                    OnPropertyChanging("Summmary");
                    _summmary = value;
                    OnPropertyChanged("Summmary");
                    OnSummmaryChanged();
                }
            }
        }
        
        private Nullable<long> _createUserid;

        /// <summary>
        /// Gets or sets the CreateUserid column value.
        /// </summary>
        [Column(Name="CreateUserid", Storage="_createUserid", DbType="bigint")]
        public Nullable<long> CreateUserid
        {
            get { return _createUserid; }
            set
            {
                if (_createUserid != value)
                {
                    OnCreateUseridChanging(value);
                    OnPropertyChanging("CreateUserid");
                    _createUserid = value;
                    OnPropertyChanged("CreateUserid");
                    OnCreateUseridChanged();
                }
            }
        }
        
        private string _publish;

        /// <summary>
        /// Gets or sets the Publish column value.
        /// </summary>
        [Column(Name="Publish", Storage="_publish", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
        public string Publish
        {
            get { return _publish; }
            set
            {
                if (_publish != value)
                {
                    OnPublishChanging(value);
                    OnPropertyChanging("Publish");
                    _publish = value;
                    OnPropertyChanged("Publish");
                    OnPublishChanged();
                }
            }
        }
        
        private byte _groupClass;

        /// <summary>
        /// Gets or sets the GroupClass column value.
        /// </summary>
        [Column(Name="GroupClass", Storage="_groupClass", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte GroupClass
        {
            get { return _groupClass; }
            set
            {
                if (_groupClass != value)
                {
                    OnGroupClassChanging(value);
                    OnPropertyChanging("GroupClass");
                    _groupClass = value;
                    OnPropertyChanged("GroupClass");
                    OnGroupClassChanged();
                }
            }
        }
        
        private byte _adminCount;

        /// <summary>
        /// Gets or sets the AdminCount column value.
        /// </summary>
        [Column(Name="AdminCount", Storage="_adminCount", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte AdminCount
        {
            get { return _adminCount; }
            set
            {
                if (_adminCount != value)
                {
                    OnAdminCountChanging(value);
                    OnPropertyChanging("AdminCount");
                    _adminCount = value;
                    OnPropertyChanged("AdminCount");
                    OnAdminCountChanged();
                }
            }
        }
        
        private long _logCount;

        /// <summary>
        /// Gets or sets the LogCount column value.
        /// </summary>
        [Column(Name="LogCount", Storage="_logCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long LogCount
        {
            get { return _logCount; }
            set
            {
                if (_logCount != value)
                {
                    OnLogCountChanging(value);
                    OnPropertyChanging("LogCount");
                    _logCount = value;
                    OnPropertyChanged("LogCount");
                    OnLogCountChanged();
                }
            }
        }
        
        private long _viewCount;

        /// <summary>
        /// Gets or sets the ViewCount column value.
        /// </summary>
        [Column(Name="ViewCount", Storage="_viewCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ViewCount
        {
            get { return _viewCount; }
            set
            {
                if (_viewCount != value)
                {
                    OnViewCountChanging(value);
                    OnPropertyChanging("ViewCount");
                    _viewCount = value;
                    OnPropertyChanged("ViewCount");
                    OnViewCountChanged();
                }
            }
        }
        
        private byte _joinLevel;

        /// <summary>
        /// Gets or sets the JoinLevel column value.
        /// </summary>
        [Column(Name="JoinLevel", Storage="_joinLevel", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte JoinLevel
        {
            get { return _joinLevel; }
            set
            {
                if (_joinLevel != value)
                {
                    OnJoinLevelChanging(value);
                    OnPropertyChanging("JoinLevel");
                    _joinLevel = value;
                    OnPropertyChanged("JoinLevel");
                    OnJoinLevelChanged();
                }
            }
        }
        
        private byte _showLevel;

        /// <summary>
        /// Gets or sets the ShowLevel column value.
        /// </summary>
        [Column(Name="ShowLevel", Storage="_showLevel", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte ShowLevel
        {
            get { return _showLevel; }
            set
            {
                if (_showLevel != value)
                {
                    OnShowLevelChanging(value);
                    OnPropertyChanging("ShowLevel");
                    _showLevel = value;
                    OnPropertyChanged("ShowLevel");
                    OnShowLevelChanged();
                }
            }
        }
        
        private long _userCount;

        /// <summary>
        /// Gets or sets the UserCount column value.
        /// </summary>
        [Column(Name="UserCount", Storage="_userCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long UserCount
        {
            get { return _userCount; }
            set
            {
                if (_userCount != value)
                {
                    OnUserCountChanging(value);
                    OnPropertyChanging("UserCount");
                    _userCount = value;
                    OnPropertyChanged("UserCount");
                    OnUserCountChanged();
                }
            }
        }
        
        private long _maxUserCount;

        /// <summary>
        /// Gets or sets the MaxUserCount column value.
        /// </summary>
        [Column(Name="MaxUserCount", Storage="_maxUserCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long MaxUserCount
        {
            get { return _maxUserCount; }
            set
            {
                if (_maxUserCount != value)
                {
                    OnMaxUserCountChanging(value);
                    OnPropertyChanging("MaxUserCount");
                    _maxUserCount = value;
                    OnPropertyChanged("MaxUserCount");
                    OnMaxUserCountChanged();
                }
            }
        }
        
        private string _magicBox;

        /// <summary>
        /// Gets or sets the MagicBox column value.
        /// </summary>
        [Column(Name="MagicBox", Storage="_magicBox", DbType="nvarchar(4000)")]
        public string MagicBox
        {
            get { return _magicBox; }
            set
            {
                if (_magicBox != value)
                {
                    OnMagicBoxChanging(value);
                    OnPropertyChanging("MagicBox");
                    _magicBox = value;
                    OnPropertyChanged("MagicBox");
                    OnMagicBoxChanged();
                }
            }
        }
        
        private string _logoUrl;

        /// <summary>
        /// Gets or sets the LogoUrl column value.
        /// </summary>
        [Column(Name="LogoUrl", Storage="_logoUrl", DbType="nvarchar(250)")]
        public string LogoUrl
        {
            get { return _logoUrl; }
            set
            {
                if (_logoUrl != value)
                {
                    OnLogoUrlChanging(value);
                    OnPropertyChanging("LogoUrl");
                    _logoUrl = value;
                    OnPropertyChanged("LogoUrl");
                    OnLogoUrlChanged();
                }
            }
        }
        
        private System.DateTime _addtime;

        /// <summary>
        /// Gets or sets the addtime column value.
        /// </summary>
        [Column(Name="addtime", Storage="_addtime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Addtime
        {
            get { return _addtime; }
            set
            {
                if (_addtime != value)
                {
                    OnAddtimeChanging(value);
                    OnPropertyChanging("Addtime");
                    _addtime = value;
                    OnPropertyChanged("Addtime");
                    OnAddtimeChanged();
                }
            }
        }
        
        private Nullable<long> _num0;

        /// <summary>
        /// Gets or sets the Num0 column value.
        /// </summary>
        [Column(Name="Num0", Storage="_num0", DbType="bigint")]
        public Nullable<long> Num0
        {
            get { return _num0; }
            set
            {
                if (_num0 != value)
                {
                    OnNum0Changing(value);
                    OnPropertyChanging("Num0");
                    _num0 = value;
                    OnPropertyChanged("Num0");
                    OnNum0Changed();
                }
            }
        }
        
        private Nullable<long> _other0;

        /// <summary>
        /// Gets or sets the Other0 column value.
        /// </summary>
        [Column(Name="Other0", Storage="_other0", DbType="bigint")]
        public Nullable<long> Other0
        {
            get { return _other0; }
            set
            {
                if (_other0 != value)
                {
                    OnOther0Changing(value);
                    OnPropertyChanging("Other0");
                    _other0 = value;
                    OnPropertyChanged("Other0");
                    OnOther0Changed();
                }
            }
        }
        
        private Nullable<long> _other1;

        /// <summary>
        /// Gets or sets the Other1 column value.
        /// </summary>
        [Column(Name="Other1", Storage="_other1", DbType="bigint")]
        public Nullable<long> Other1
        {
            get { return _other1; }
            set
            {
                if (_other1 != value)
                {
                    OnOther1Changing(value);
                    OnPropertyChanging("Other1");
                    _other1 = value;
                    OnPropertyChanged("Other1");
                    OnOther1Changed();
                }
            }
        }
        
        private Nullable<long> _other2;

        /// <summary>
        /// Gets or sets the Other2 column value.
        /// </summary>
        [Column(Name="Other2", Storage="_other2", DbType="bigint")]
        public Nullable<long> Other2
        {
            get { return _other2; }
            set
            {
                if (_other2 != value)
                {
                    OnOther2Changing(value);
                    OnPropertyChanging("Other2");
                    _other2 = value;
                    OnPropertyChanged("Other2");
                    OnOther2Changed();
                }
            }
        }
        
        private bool _isTrue;

        /// <summary>
        /// Gets or sets the IsTrue column value.
        /// </summary>
        [Column(Name="IsTrue", Storage="_isTrue", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsTrue
        {
            get { return _isTrue; }
            set
            {
                if (_isTrue != value)
                {
                    OnIsTrueChanging(value);
                    OnPropertyChanging("IsTrue");
                    _isTrue = value;
                    OnPropertyChanged("IsTrue");
                    OnIsTrueChanged();
                }
            }
        }
        
        private Nullable<long> _categoryid;

        /// <summary>
        /// Gets or sets the categoryid column value.
        /// </summary>
        [Column(Name="categoryid", Storage="_categoryid", DbType="bigint")]
        public Nullable<long> Categoryid
        {
            get { return _categoryid; }
            set
            {
                if (_categoryid != value)
                {
                    OnCategoryidChanging(value);
                    OnPropertyChanging("Categoryid");
                    _categoryid = value;
                    OnPropertyChanged("Categoryid");
                    OnCategoryidChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        
        private EntitySet<GroupUser> _groupUserList;
        
        /// <summary>
        /// Gets or sets the GroupUser association.
        /// </summary>
        [Association(Name="FK_GroupUser_Group", Storage="_groupUserList", ThisKey="Id", OtherKey="Groupid")]
        public EntitySet<GroupUser> GroupUserList
        {
            get { return _groupUserList; }
            set { _groupUserList.Assign(value); }
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Attach_GroupUserList(GroupUser entity)
        {
            OnPropertyChanging(null);
            entity.Group = this;
            OnPropertyChanged(null);
        }
        
        [DebuggerNonUserCodeAttribute()]
        private void Detach_GroupUserList(GroupUser entity)
        {
            OnPropertyChanging(null);
            entity.Group = null;
            OnPropertyChanged(null);
        }
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Trueid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueidChanging(long value);
        /// <summary>Called after Trueid has Changed.</summary>
        partial void OnTrueidChanged();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(long value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when GroupName is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnGroupNameChanging(string value);
        /// <summary>Called after GroupName has Changed.</summary>
        partial void OnGroupNameChanged();
        /// <summary>Called when Summmary is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSummmaryChanging(string value);
        /// <summary>Called after Summmary has Changed.</summary>
        partial void OnSummmaryChanged();
        /// <summary>Called when CreateUserid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCreateUseridChanging(Nullable<long> value);
        /// <summary>Called after CreateUserid has Changed.</summary>
        partial void OnCreateUseridChanged();
        /// <summary>Called when Publish is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnPublishChanging(string value);
        /// <summary>Called after Publish has Changed.</summary>
        partial void OnPublishChanged();
        /// <summary>Called when GroupClass is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnGroupClassChanging(byte value);
        /// <summary>Called after GroupClass has Changed.</summary>
        partial void OnGroupClassChanged();
        /// <summary>Called when AdminCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAdminCountChanging(byte value);
        /// <summary>Called after AdminCount has Changed.</summary>
        partial void OnAdminCountChanged();
        /// <summary>Called when LogCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLogCountChanging(long value);
        /// <summary>Called after LogCount has Changed.</summary>
        partial void OnLogCountChanged();
        /// <summary>Called when ViewCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnViewCountChanging(long value);
        /// <summary>Called after ViewCount has Changed.</summary>
        partial void OnViewCountChanged();
        /// <summary>Called when JoinLevel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnJoinLevelChanging(byte value);
        /// <summary>Called after JoinLevel has Changed.</summary>
        partial void OnJoinLevelChanged();
        /// <summary>Called when ShowLevel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShowLevelChanging(byte value);
        /// <summary>Called after ShowLevel has Changed.</summary>
        partial void OnShowLevelChanged();
        /// <summary>Called when UserCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUserCountChanging(long value);
        /// <summary>Called after UserCount has Changed.</summary>
        partial void OnUserCountChanged();
        /// <summary>Called when MaxUserCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnMaxUserCountChanging(long value);
        /// <summary>Called after MaxUserCount has Changed.</summary>
        partial void OnMaxUserCountChanged();
        /// <summary>Called when MagicBox is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnMagicBoxChanging(string value);
        /// <summary>Called after MagicBox has Changed.</summary>
        partial void OnMagicBoxChanged();
        /// <summary>Called when LogoUrl is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLogoUrlChanging(string value);
        /// <summary>Called after LogoUrl has Changed.</summary>
        partial void OnLogoUrlChanged();
        /// <summary>Called when Addtime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddtimeChanging(System.DateTime value);
        /// <summary>Called after Addtime has Changed.</summary>
        partial void OnAddtimeChanged();
        /// <summary>Called when Num0 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNum0Changing(Nullable<long> value);
        /// <summary>Called after Num0 has Changed.</summary>
        partial void OnNum0Changed();
        /// <summary>Called when Other0 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOther0Changing(Nullable<long> value);
        /// <summary>Called after Other0 has Changed.</summary>
        partial void OnOther0Changed();
        /// <summary>Called when Other1 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOther1Changing(Nullable<long> value);
        /// <summary>Called after Other1 has Changed.</summary>
        partial void OnOther1Changed();
        /// <summary>Called when Other2 is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOther2Changing(Nullable<long> value);
        /// <summary>Called after Other2 has Changed.</summary>
        partial void OnOther2Changed();
        /// <summary>Called when IsTrue is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsTrueChanging(bool value);
        /// <summary>Called after IsTrue has Changed.</summary>
        partial void OnIsTrueChanged();
        /// <summary>Called when Categoryid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCategoryidChanging(Nullable<long> value);
        /// <summary>Called after Categoryid has Changed.</summary>
        partial void OnCategoryidChanged();
        #endregion
        
    }
}

