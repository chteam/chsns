
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Comment table.
    /// </summary>
    [Table(Name="dbo.Comment")]
    public partial class Comment
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Comment"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Comment()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private string _body;

        /// <summary>
        /// Gets or sets the body column value.
        /// </summary>
        [Column(Name="body", Storage="_body", DbType="ntext NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
        public string Body
        {
            get { return _body; }
            set
            {
                if (_body != value)
                {
                    OnBodyChanging(value);
                    OnPropertyChanging("Body");
                    _body = value;
                    OnPropertyChanged("Body");
                    OnBodyChanged();
                }
            }
        }
        
        private bool _isReply;

        /// <summary>
        /// Gets or sets the IsReply column value.
        /// </summary>
        [Column(Name="IsReply", Storage="_isReply", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsReply
        {
            get { return _isReply; }
            set
            {
                if (_isReply != value)
                {
                    OnIsReplyChanging(value);
                    OnPropertyChanging("IsReply");
                    _isReply = value;
                    OnPropertyChanged("IsReply");
                    OnIsReplyChanged();
                }
            }
        }
        
        private bool _isSee;

        /// <summary>
        /// Gets or sets the IsSee column value.
        /// </summary>
        [Column(Name="IsSee", Storage="_isSee", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsSee
        {
            get { return _isSee; }
            set
            {
                if (_isSee != value)
                {
                    OnIsSeeChanging(value);
                    OnPropertyChanging("IsSee");
                    _isSee = value;
                    OnPropertyChanged("IsSee");
                    OnIsSeeChanged();
                }
            }
        }
        
        private bool _isDel;

        /// <summary>
        /// Gets or sets the IsDel column value.
        /// </summary>
        [Column(Name="IsDel", Storage="_isDel", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsDel
        {
            get { return _isDel; }
            set
            {
                if (_isDel != value)
                {
                    OnIsDelChanging(value);
                    OnPropertyChanging("IsDel");
                    _isDel = value;
                    OnPropertyChanged("IsDel");
                    OnIsDelChanged();
                }
            }
        }
        
        private byte _type;

        /// <summary>
        /// Gets or sets the type column value.
        /// </summary>
        [Column(Name="type", Storage="_type", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    OnTypeChanging(value);
                    OnPropertyChanging("Type");
                    _type = value;
                    OnPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        
        private byte _istellme;

        /// <summary>
        /// Gets or sets the istellme column value.
        /// </summary>
        [Column(Name="istellme", Storage="_istellme", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Istellme
        {
            get { return _istellme; }
            set
            {
                if (_istellme != value)
                {
                    OnIstellmeChanging(value);
                    OnPropertyChanging("Istellme");
                    _istellme = value;
                    OnPropertyChanged("Istellme");
                    OnIstellmeChanged();
                }
            }
        }
        
        private long _trueID = default(long);

        /// <summary>
        /// Gets the TrueID column value.
        /// </summary>
        [Column(Name="TrueID", Storage="_trueID", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long TrueID
        {
            get { return _trueID; }
            set
            {
                if (_trueID != value)
                {
                    OnTrueIDChanging(value);
                    OnPropertyChanging("TrueID");
                    _trueID = value;
                    OnPropertyChanged("TrueID");
                    OnTrueIDChanged();
                }
            }
        }
        
        private Nullable<long> _iD;

        /// <summary>
        /// Gets or sets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint")]
        public Nullable<long> ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private Nullable<long> _logID;

        /// <summary>
        /// Gets or sets the LogID column value.
        /// </summary>
        [Column(Name="LogID", Storage="_logID", DbType="bigint")]
        public Nullable<long> LogID
        {
            get { return _logID; }
            set
            {
                if (_logID != value)
                {
                    OnLogIDChanging(value);
                    OnPropertyChanging("LogID");
                    _logID = value;
                    OnPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        
        private long _ownerID;

        /// <summary>
        /// Gets or sets the OwnerID column value.
        /// </summary>
        [Column(Name="OwnerID", Storage="_ownerID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long OwnerID
        {
            get { return _ownerID; }
            set
            {
                if (_ownerID != value)
                {
                    OnOwnerIDChanging(value);
                    OnPropertyChanging("OwnerID");
                    _ownerID = value;
                    OnPropertyChanged("OwnerID");
                    OnOwnerIDChanged();
                }
            }
        }
        
        private long _senderID;

        /// <summary>
        /// Gets or sets the SenderID column value.
        /// </summary>
        [Column(Name="SenderID", Storage="_senderID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long SenderID
        {
            get { return _senderID; }
            set
            {
                if (_senderID != value)
                {
                    OnSenderIDChanging(value);
                    OnPropertyChanging("SenderID");
                    _senderID = value;
                    OnPropertyChanged("SenderID");
                    OnSenderIDChanged();
                }
            }
        }
        
        private System.DateTime _addTime;

        /// <summary>
        /// Gets or sets the AddTime column value.
        /// </summary>
        [Column(Name="AddTime", Storage="_addTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime AddTime
        {
            get { return _addTime; }
            set
            {
                if (_addTime != value)
                {
                    OnAddTimeChanging(value);
                    OnPropertyChanging("AddTime");
                    _addTime = value;
                    OnPropertyChanged("AddTime");
                    OnAddTimeChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Body is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBodyChanging(string value);
        /// <summary>Called after Body has Changed.</summary>
        partial void OnBodyChanged();
        /// <summary>Called when IsReply is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsReplyChanging(bool value);
        /// <summary>Called after IsReply has Changed.</summary>
        partial void OnIsReplyChanged();
        /// <summary>Called when IsSee is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsSeeChanging(bool value);
        /// <summary>Called after IsSee has Changed.</summary>
        partial void OnIsSeeChanged();
        /// <summary>Called when IsDel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsDelChanging(bool value);
        /// <summary>Called after IsDel has Changed.</summary>
        partial void OnIsDelChanged();
        /// <summary>Called when Type is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTypeChanging(byte value);
        /// <summary>Called after Type has Changed.</summary>
        partial void OnTypeChanged();
        /// <summary>Called when Istellme is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIstellmeChanging(byte value);
        /// <summary>Called after Istellme has Changed.</summary>
        partial void OnIstellmeChanged();
        /// <summary>Called when TrueID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueIDChanging(long value);
        /// <summary>Called after TrueID has Changed.</summary>
        partial void OnTrueIDChanged();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(Nullable<long> value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when LogID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLogIDChanging(Nullable<long> value);
        /// <summary>Called after LogID has Changed.</summary>
        partial void OnLogIDChanged();
        /// <summary>Called when OwnerID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOwnerIDChanging(long value);
        /// <summary>Called after OwnerID has Changed.</summary>
        partial void OnOwnerIDChanged();
        /// <summary>Called when SenderID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSenderIDChanging(long value);
        /// <summary>Called after SenderID has Changed.</summary>
        partial void OnSenderIDChanged();
        /// <summary>Called when AddTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddTimeChanging(System.DateTime value);
        /// <summary>Called after AddTime has Changed.</summary>
        partial void OnAddTimeChanged();
        #endregion
        
    }
}

