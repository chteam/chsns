
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Album table.
    /// </summary>
    [Table(Name="dbo.Album")]
    public partial class Album
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Album"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Album()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _trueID = default(long);

        /// <summary>
        /// Gets the TrueID column value.
        /// </summary>
        [Column(Name="TrueID", Storage="_trueID", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long TrueID
        {
            get { return _trueID; }
            set
            {
                if (_trueID != value)
                {
                    OnTrueIDChanging(value);
                    OnPropertyChanging("TrueID");
                    _trueID = value;
                    OnPropertyChanged("TrueID");
                    OnTrueIDChanged();
                }
            }
        }
        
        private Nullable<long> _id;

        /// <summary>
        /// Gets or sets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint")]
        public Nullable<long> Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private long _userID;

        /// <summary>
        /// Gets or sets the UserID column value.
        /// </summary>
        [Column(Name="UserID", Storage="_userID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    OnUserIDChanging(value);
                    OnPropertyChanging("UserID");
                    _userID = value;
                    OnPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        
        private string _name;

        /// <summary>
        /// Gets or sets the name column value.
        /// </summary>
        [Column(Name="name", Storage="_name", DbType="nvarchar(50) NOT NULL", CanBeNull=false)]
        public string Name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    OnNameChanging(value);
                    OnPropertyChanging("Name");
                    _name = value;
                    OnPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        
        private byte _showlevel;

        /// <summary>
        /// Gets or sets the Showlevel column value.
        /// </summary>
        [Column(Name="Showlevel", Storage="_showlevel", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Showlevel
        {
            get { return _showlevel; }
            set
            {
                if (_showlevel != value)
                {
                    OnShowlevelChanging(value);
                    OnPropertyChanging("Showlevel");
                    _showlevel = value;
                    OnPropertyChanged("Showlevel");
                    OnShowlevelChanged();
                }
            }
        }
        
        private string _description;

        /// <summary>
        /// Gets or sets the Description column value.
        /// </summary>
        [Column(Name="Description", Storage="_description", DbType="nvarchar(150) NOT NULL", CanBeNull=false)]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _description = value;
                    OnPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        
        private System.DateTime _addtime;

        /// <summary>
        /// Gets or sets the Addtime column value.
        /// </summary>
        [Column(Name="Addtime", Storage="_addtime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Addtime
        {
            get { return _addtime; }
            set
            {
                if (_addtime != value)
                {
                    OnAddtimeChanging(value);
                    OnPropertyChanging("Addtime");
                    _addtime = value;
                    OnPropertyChanged("Addtime");
                    OnAddtimeChanged();
                }
            }
        }
        
        private int _order;

        /// <summary>
        /// Gets or sets the Order column value.
        /// </summary>
        [Column(Name="Order", Storage="_order", DbType="int NOT NULL", CanBeNull=false)]
        public int Order
        {
            get { return _order; }
            set
            {
                if (_order != value)
                {
                    OnOrderChanging(value);
                    OnPropertyChanging("Order");
                    _order = value;
                    OnPropertyChanged("Order");
                    OnOrderChanged();
                }
            }
        }
        
        private string _location;

        /// <summary>
        /// Gets or sets the Location column value.
        /// </summary>
        [Column(Name="Location", Storage="_location", DbType="nvarchar(50)")]
        public string Location
        {
            get { return _location; }
            set
            {
                if (_location != value)
                {
                    OnLocationChanging(value);
                    OnPropertyChanging("Location");
                    _location = value;
                    OnPropertyChanged("Location");
                    OnLocationChanged();
                }
            }
        }
        
        private string _faceurl;

        /// <summary>
        /// Gets or sets the faceurl column value.
        /// </summary>
        [Column(Name="faceurl", Storage="_faceurl", DbType="nvarchar(250)")]
        public string Faceurl
        {
            get { return _faceurl; }
            set
            {
                if (_faceurl != value)
                {
                    OnFaceurlChanging(value);
                    OnPropertyChanging("Faceurl");
                    _faceurl = value;
                    OnPropertyChanged("Faceurl");
                    OnFaceurlChanged();
                }
            }
        }
        
        private int _count;

        /// <summary>
        /// Gets or sets the Count column value.
        /// </summary>
        [Column(Name="Count", Storage="_count", DbType="int NOT NULL", CanBeNull=false)]
        public int Count
        {
            get { return _count; }
            set
            {
                if (_count != value)
                {
                    OnCountChanging(value);
                    OnPropertyChanging("Count");
                    _count = value;
                    OnPropertyChanged("Count");
                    OnCountChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when TrueID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueIDChanging(long value);
        /// <summary>Called after TrueID has Changed.</summary>
        partial void OnTrueIDChanged();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(Nullable<long> value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when UserID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUserIDChanging(long value);
        /// <summary>Called after UserID has Changed.</summary>
        partial void OnUserIDChanged();
        /// <summary>Called when Name is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnNameChanging(string value);
        /// <summary>Called after Name has Changed.</summary>
        partial void OnNameChanged();
        /// <summary>Called when Showlevel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShowlevelChanging(byte value);
        /// <summary>Called after Showlevel has Changed.</summary>
        partial void OnShowlevelChanged();
        /// <summary>Called when Description is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescriptionChanging(string value);
        /// <summary>Called after Description has Changed.</summary>
        partial void OnDescriptionChanged();
        /// <summary>Called when Addtime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddtimeChanging(System.DateTime value);
        /// <summary>Called after Addtime has Changed.</summary>
        partial void OnAddtimeChanged();
        /// <summary>Called when Order is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnOrderChanging(int value);
        /// <summary>Called after Order has Changed.</summary>
        partial void OnOrderChanged();
        /// <summary>Called when Location is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnLocationChanging(string value);
        /// <summary>Called after Location has Changed.</summary>
        partial void OnLocationChanged();
        /// <summary>Called when Faceurl is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFaceurlChanging(string value);
        /// <summary>Called after Faceurl has Changed.</summary>
        partial void OnFaceurlChanged();
        /// <summary>Called when Count is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCountChanging(int value);
        /// <summary>Called after Count has Changed.</summary>
        partial void OnCountChanged();
        #endregion
        
    }
}

