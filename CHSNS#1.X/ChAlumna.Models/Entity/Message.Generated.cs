
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Message table.
    /// </summary>
    [Table(Name="dbo.Message")]
    public partial class Message
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Message"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Message()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _iD = default(long);

        /// <summary>
        /// Gets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private long _fromID;

        /// <summary>
        /// Gets or sets the FromID column value.
        /// </summary>
        [Column(Name="FromID", Storage="_fromID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long FromID
        {
            get { return _fromID; }
            set
            {
                if (_fromID != value)
                {
                    OnFromIDChanging(value);
                    OnPropertyChanging("FromID");
                    _fromID = value;
                    OnPropertyChanged("FromID");
                    OnFromIDChanged();
                }
            }
        }
        
        private long _toID;

        /// <summary>
        /// Gets or sets the ToID column value.
        /// </summary>
        [Column(Name="ToID", Storage="_toID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ToID
        {
            get { return _toID; }
            set
            {
                if (_toID != value)
                {
                    OnToIDChanging(value);
                    OnPropertyChanging("ToID");
                    _toID = value;
                    OnPropertyChanged("ToID");
                    OnToIDChanged();
                }
            }
        }
        
        private string _title;

        /// <summary>
        /// Gets or sets the Title column value.
        /// </summary>
        [Column(Name="Title", Storage="_title", DbType="nvarchar(200) NOT NULL", CanBeNull=false)]
        public string Title
        {
            get { return _title; }
            set
            {
                if (_title != value)
                {
                    OnTitleChanging(value);
                    OnPropertyChanging("Title");
                    _title = value;
                    OnPropertyChanged("Title");
                    OnTitleChanged();
                }
            }
        }
        
        private string _body;

        /// <summary>
        /// Gets or sets the Body column value.
        /// </summary>
        [Column(Name="Body", Storage="_body", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
        public string Body
        {
            get { return _body; }
            set
            {
                if (_body != value)
                {
                    OnBodyChanging(value);
                    OnPropertyChanging("Body");
                    _body = value;
                    OnPropertyChanged("Body");
                    OnBodyChanged();
                }
            }
        }
        
        private System.DateTime _sendTime;

        /// <summary>
        /// Gets or sets the SendTime column value.
        /// </summary>
        [Column(Name="SendTime", Storage="_sendTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime SendTime
        {
            get { return _sendTime; }
            set
            {
                if (_sendTime != value)
                {
                    OnSendTimeChanging(value);
                    OnPropertyChanging("SendTime");
                    _sendTime = value;
                    OnPropertyChanged("SendTime");
                    OnSendTimeChanged();
                }
            }
        }
        
        private bool _isSee;

        /// <summary>
        /// Gets or sets the IsSee column value.
        /// </summary>
        [Column(Name="IsSee", Storage="_isSee", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsSee
        {
            get { return _isSee; }
            set
            {
                if (_isSee != value)
                {
                    OnIsSeeChanging(value);
                    OnPropertyChanging("IsSee");
                    _isSee = value;
                    OnPropertyChanged("IsSee");
                    OnIsSeeChanged();
                }
            }
        }
        
        private bool _isFromDel;

        /// <summary>
        /// Gets or sets the IsFromDel column value.
        /// </summary>
        [Column(Name="IsFromDel", Storage="_isFromDel", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsFromDel
        {
            get { return _isFromDel; }
            set
            {
                if (_isFromDel != value)
                {
                    OnIsFromDelChanging(value);
                    OnPropertyChanging("IsFromDel");
                    _isFromDel = value;
                    OnPropertyChanged("IsFromDel");
                    OnIsFromDelChanged();
                }
            }
        }
        
        private bool _isToDel;

        /// <summary>
        /// Gets or sets the IsToDel column value.
        /// </summary>
        [Column(Name="IsToDel", Storage="_isToDel", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsToDel
        {
            get { return _isToDel; }
            set
            {
                if (_isToDel != value)
                {
                    OnIsToDelChanging(value);
                    OnPropertyChanging("IsToDel");
                    _isToDel = value;
                    OnPropertyChanged("IsToDel");
                    OnIsToDelChanged();
                }
            }
        }
        
        private bool _isHtml;

        /// <summary>
        /// Gets or sets the IsHtml column value.
        /// </summary>
        [Column(Name="IsHtml", Storage="_isHtml", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsHtml
        {
            get { return _isHtml; }
            set
            {
                if (_isHtml != value)
                {
                    OnIsHtmlChanging(value);
                    OnPropertyChanging("IsHtml");
                    _isHtml = value;
                    OnPropertyChanged("IsHtml");
                    OnIsHtmlChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when FromID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFromIDChanging(long value);
        /// <summary>Called after FromID has Changed.</summary>
        partial void OnFromIDChanged();
        /// <summary>Called when ToID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnToIDChanging(long value);
        /// <summary>Called after ToID has Changed.</summary>
        partial void OnToIDChanged();
        /// <summary>Called when Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTitleChanging(string value);
        /// <summary>Called after Title has Changed.</summary>
        partial void OnTitleChanged();
        /// <summary>Called when Body is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBodyChanging(string value);
        /// <summary>Called after Body has Changed.</summary>
        partial void OnBodyChanged();
        /// <summary>Called when SendTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSendTimeChanging(System.DateTime value);
        /// <summary>Called after SendTime has Changed.</summary>
        partial void OnSendTimeChanged();
        /// <summary>Called when IsSee is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsSeeChanging(bool value);
        /// <summary>Called after IsSee has Changed.</summary>
        partial void OnIsSeeChanged();
        /// <summary>Called when IsFromDel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsFromDelChanging(bool value);
        /// <summary>Called after IsFromDel has Changed.</summary>
        partial void OnIsFromDelChanged();
        /// <summary>Called when IsToDel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsToDelChanging(bool value);
        /// <summary>Called after IsToDel has Changed.</summary>
        partial void OnIsToDelChanged();
        /// <summary>Called when IsHtml is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsHtmlChanging(bool value);
        /// <summary>Called after IsHtml has Changed.</summary>
        partial void OnIsHtmlChanged();
        #endregion
        
    }
}

