
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.SuperNote table.
    /// </summary>
    [Table(Name="dbo.SuperNote")]
    public partial class SuperNote
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="SuperNote"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public SuperNote()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _trueid = default(long);

        /// <summary>
        /// Gets the trueid column value.
        /// </summary>
        [Column(Name="trueid", Storage="_trueid", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long Trueid
        {
            get { return _trueid; }
            set
            {
                if (_trueid != value)
                {
                    OnTrueidChanging(value);
                    OnPropertyChanging("Trueid");
                    _trueid = value;
                    OnPropertyChanged("Trueid");
                    OnTrueidChanged();
                }
            }
        }
        
        private Nullable<long> _id;

        /// <summary>
        /// Gets or sets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint")]
        public Nullable<long> Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private string _title;

        /// <summary>
        /// Gets or sets the title column value.
        /// </summary>
        [Column(Name="title", Storage="_title", DbType="nvarchar(50)")]
        public string Title
        {
            get { return _title; }
            set
            {
                if (_title != value)
                {
                    OnTitleChanging(value);
                    OnPropertyChanging("Title");
                    _title = value;
                    OnPropertyChanged("Title");
                    OnTitleChanged();
                }
            }
        }
        
        private string _faceurl;

        /// <summary>
        /// Gets or sets the faceurl column value.
        /// </summary>
        [Column(Name="faceurl", Storage="_faceurl", DbType="nvarchar(500)")]
        public string Faceurl
        {
            get { return _faceurl; }
            set
            {
                if (_faceurl != value)
                {
                    OnFaceurlChanging(value);
                    OnPropertyChanging("Faceurl");
                    _faceurl = value;
                    OnPropertyChanged("Faceurl");
                    OnFaceurlChanged();
                }
            }
        }
        
        private string _url;

        /// <summary>
        /// Gets or sets the url column value.
        /// </summary>
        [Column(Name="url", Storage="_url", DbType="nvarchar(500) NOT NULL", CanBeNull=false)]
        public string Url
        {
            get { return _url; }
            set
            {
                if (_url != value)
                {
                    OnUrlChanging(value);
                    OnPropertyChanging("Url");
                    _url = value;
                    OnPropertyChanged("Url");
                    OnUrlChanged();
                }
            }
        }
        
        private string _description;

        /// <summary>
        /// Gets or sets the description column value.
        /// </summary>
        [Column(Name="description", Storage="_description", DbType="nvarchar(50)")]
        public string Description
        {
            get { return _description; }
            set
            {
                if (_description != value)
                {
                    OnDescriptionChanging(value);
                    OnPropertyChanging("Description");
                    _description = value;
                    OnPropertyChanged("Description");
                    OnDescriptionChanged();
                }
            }
        }
        
        private long _userid;

        /// <summary>
        /// Gets or sets the userid column value.
        /// </summary>
        [Column(Name="userid", Storage="_userid", DbType="bigint NOT NULL", CanBeNull=false)]
        public long Userid
        {
            get { return _userid; }
            set
            {
                if (_userid != value)
                {
                    OnUseridChanging(value);
                    OnPropertyChanging("Userid");
                    _userid = value;
                    OnPropertyChanged("Userid");
                    OnUseridChanged();
                }
            }
        }
        
        private long _viewCount;

        /// <summary>
        /// Gets or sets the ViewCount column value.
        /// </summary>
        [Column(Name="ViewCount", Storage="_viewCount", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ViewCount
        {
            get { return _viewCount; }
            set
            {
                if (_viewCount != value)
                {
                    OnViewCountChanging(value);
                    OnPropertyChanging("ViewCount");
                    _viewCount = value;
                    OnPropertyChanged("ViewCount");
                    OnViewCountChanged();
                }
            }
        }
        
        private System.DateTime _addTime;

        /// <summary>
        /// Gets or sets the AddTime column value.
        /// </summary>
        [Column(Name="AddTime", Storage="_addTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime AddTime
        {
            get { return _addTime; }
            set
            {
                if (_addTime != value)
                {
                    OnAddTimeChanging(value);
                    OnPropertyChanging("AddTime");
                    _addTime = value;
                    OnPropertyChanged("AddTime");
                    OnAddTimeChanged();
                }
            }
        }
        
        private byte _showlevel;

        /// <summary>
        /// Gets or sets the showlevel column value.
        /// </summary>
        [Column(Name="showlevel", Storage="_showlevel", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Showlevel
        {
            get { return _showlevel; }
            set
            {
                if (_showlevel != value)
                {
                    OnShowlevelChanging(value);
                    OnPropertyChanging("Showlevel");
                    _showlevel = value;
                    OnPropertyChanged("Showlevel");
                    OnShowlevelChanged();
                }
            }
        }
        
        private Nullable<long> _systemcategory;

        /// <summary>
        /// Gets or sets the systemcategory column value.
        /// </summary>
        [Column(Name="systemcategory", Storage="_systemcategory", DbType="bigint")]
        public Nullable<long> Systemcategory
        {
            get { return _systemcategory; }
            set
            {
                if (_systemcategory != value)
                {
                    OnSystemcategoryChanging(value);
                    OnPropertyChanging("Systemcategory");
                    _systemcategory = value;
                    OnPropertyChanged("Systemcategory");
                    OnSystemcategoryChanged();
                }
            }
        }
        
        private Nullable<long> _category;

        /// <summary>
        /// Gets or sets the category column value.
        /// </summary>
        [Column(Name="category", Storage="_category", DbType="bigint")]
        public Nullable<long> Category
        {
            get { return _category; }
            set
            {
                if (_category != value)
                {
                    OnCategoryChanging(value);
                    OnPropertyChanging("Category");
                    _category = value;
                    OnPropertyChanged("Category");
                    OnCategoryChanged();
                }
            }
        }
        
        private byte _type;

        /// <summary>
        /// Gets or sets the type column value.
        /// </summary>
        [Column(Name="type", Storage="_type", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    OnTypeChanging(value);
                    OnPropertyChanging("Type");
                    _type = value;
                    OnPropertyChanged("Type");
                    OnTypeChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Trueid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTrueidChanging(long value);
        /// <summary>Called after Trueid has Changed.</summary>
        partial void OnTrueidChanged();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(Nullable<long> value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when Title is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTitleChanging(string value);
        /// <summary>Called after Title has Changed.</summary>
        partial void OnTitleChanged();
        /// <summary>Called when Faceurl is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFaceurlChanging(string value);
        /// <summary>Called after Faceurl has Changed.</summary>
        partial void OnFaceurlChanged();
        /// <summary>Called when Url is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUrlChanging(string value);
        /// <summary>Called after Url has Changed.</summary>
        partial void OnUrlChanged();
        /// <summary>Called when Description is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnDescriptionChanging(string value);
        /// <summary>Called after Description has Changed.</summary>
        partial void OnDescriptionChanged();
        /// <summary>Called when Userid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUseridChanging(long value);
        /// <summary>Called after Userid has Changed.</summary>
        partial void OnUseridChanged();
        /// <summary>Called when ViewCount is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnViewCountChanging(long value);
        /// <summary>Called after ViewCount has Changed.</summary>
        partial void OnViewCountChanged();
        /// <summary>Called when AddTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddTimeChanging(System.DateTime value);
        /// <summary>Called after AddTime has Changed.</summary>
        partial void OnAddTimeChanged();
        /// <summary>Called when Showlevel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnShowlevelChanging(byte value);
        /// <summary>Called after Showlevel has Changed.</summary>
        partial void OnShowlevelChanged();
        /// <summary>Called when Systemcategory is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSystemcategoryChanging(Nullable<long> value);
        /// <summary>Called after Systemcategory has Changed.</summary>
        partial void OnSystemcategoryChanged();
        /// <summary>Called when Category is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnCategoryChanging(Nullable<long> value);
        /// <summary>Called after Category has Changed.</summary>
        partial void OnCategoryChanged();
        /// <summary>Called when Type is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnTypeChanging(byte value);
        /// <summary>Called after Type has Changed.</summary>
        partial void OnTypeChanged();
        #endregion
        
    }
}

