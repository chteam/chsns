
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Reply table.
    /// </summary>
    [Table(Name="dbo.Reply")]
    public partial class Reply
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Reply"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Reply()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _iD = default(long);

        /// <summary>
        /// Gets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private long _userID;

        /// <summary>
        /// Gets or sets the UserID column value.
        /// </summary>
        [Column(Name="UserID", Storage="_userID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long UserID
        {
            get { return _userID; }
            set
            {
                if (_userID != value)
                {
                    OnUserIDChanging(value);
                    OnPropertyChanging("UserID");
                    _userID = value;
                    OnPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        
        private long _senderID;

        /// <summary>
        /// Gets or sets the SenderID column value.
        /// </summary>
        [Column(Name="SenderID", Storage="_senderID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long SenderID
        {
            get { return _senderID; }
            set
            {
                if (_senderID != value)
                {
                    OnSenderIDChanging(value);
                    OnPropertyChanging("SenderID");
                    _senderID = value;
                    OnPropertyChanged("SenderID");
                    OnSenderIDChanged();
                }
            }
        }
        
        private string _body;

        /// <summary>
        /// Gets or sets the Body column value.
        /// </summary>
        [Column(Name="Body", Storage="_body", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
        public string Body
        {
            get { return _body; }
            set
            {
                if (_body != value)
                {
                    OnBodyChanging(value);
                    OnPropertyChanging("Body");
                    _body = value;
                    OnPropertyChanged("Body");
                    OnBodyChanged();
                }
            }
        }
        
        private System.DateTime _addTime;

        /// <summary>
        /// Gets or sets the AddTime column value.
        /// </summary>
        [Column(Name="AddTime", Storage="_addTime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime AddTime
        {
            get { return _addTime; }
            set
            {
                if (_addTime != value)
                {
                    OnAddTimeChanging(value);
                    OnPropertyChanging("AddTime");
                    _addTime = value;
                    OnPropertyChanged("AddTime");
                    OnAddTimeChanged();
                }
            }
        }
        
        private bool _isSee;

        /// <summary>
        /// Gets or sets the IsSee column value.
        /// </summary>
        [Column(Name="IsSee", Storage="_isSee", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsSee
        {
            get { return _isSee; }
            set
            {
                if (_isSee != value)
                {
                    OnIsSeeChanging(value);
                    OnPropertyChanging("IsSee");
                    _isSee = value;
                    OnPropertyChanged("IsSee");
                    OnIsSeeChanged();
                }
            }
        }
        
        private bool _isDel;

        /// <summary>
        /// Gets or sets the IsDel column value.
        /// </summary>
        [Column(Name="IsDel", Storage="_isDel", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsDel
        {
            get { return _isDel; }
            set
            {
                if (_isDel != value)
                {
                    OnIsDelChanging(value);
                    OnPropertyChanging("IsDel");
                    _isDel = value;
                    OnPropertyChanged("IsDel");
                    OnIsDelChanged();
                }
            }
        }
        
        private byte _isTellMe;

        /// <summary>
        /// Gets or sets the IsTellMe column value.
        /// </summary>
        [Column(Name="IsTellMe", Storage="_isTellMe", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte IsTellMe
        {
            get { return _isTellMe; }
            set
            {
                if (_isTellMe != value)
                {
                    OnIsTellMeChanging(value);
                    OnPropertyChanging("IsTellMe");
                    _isTellMe = value;
                    OnPropertyChanged("IsTellMe");
                    OnIsTellMeChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when UserID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUserIDChanging(long value);
        /// <summary>Called after UserID has Changed.</summary>
        partial void OnUserIDChanged();
        /// <summary>Called when SenderID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSenderIDChanging(long value);
        /// <summary>Called after SenderID has Changed.</summary>
        partial void OnSenderIDChanged();
        /// <summary>Called when Body is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBodyChanging(string value);
        /// <summary>Called after Body has Changed.</summary>
        partial void OnBodyChanged();
        /// <summary>Called when AddTime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAddTimeChanging(System.DateTime value);
        /// <summary>Called after AddTime has Changed.</summary>
        partial void OnAddTimeChanged();
        /// <summary>Called when IsSee is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsSeeChanging(bool value);
        /// <summary>Called after IsSee has Changed.</summary>
        partial void OnIsSeeChanged();
        /// <summary>Called when IsDel is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsDelChanging(bool value);
        /// <summary>Called after IsDel has Changed.</summary>
        partial void OnIsDelChanged();
        /// <summary>Called when IsTellMe is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsTellMeChanging(byte value);
        /// <summary>Called after IsTellMe has Changed.</summary>
        partial void OnIsTellMeChanged();
        #endregion
        
    }
}

