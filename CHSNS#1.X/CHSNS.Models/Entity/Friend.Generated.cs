
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Friend table.
    /// </summary>
    [Table(Name="dbo.Friend")]
    public partial class Friend
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Friend"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Friend()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private bool _isTrue;

        /// <summary>
        /// Gets or sets the IsTrue column value.
        /// </summary>
        [Column(Name="IsTrue", Storage="_isTrue", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsTrue
        {
            get { return _isTrue; }
            set
            {
                if (_isTrue != value)
                {
                    OnIsTrueChanging(value);
                    OnPropertyChanging("IsTrue");
                    _isTrue = value;
                    OnPropertyChanged("IsTrue");
                    OnIsTrueChanged();
                }
            }
        }
        
        private bool _isCommon;

        /// <summary>
        /// Gets or sets the IsCommon column value.
        /// </summary>
        [Column(Name="IsCommon", Storage="_isCommon", DbType="bit NOT NULL", CanBeNull=false)]
        public bool IsCommon
        {
            get { return _isCommon; }
            set
            {
                if (_isCommon != value)
                {
                    OnIsCommonChanging(value);
                    OnPropertyChanging("IsCommon");
                    _isCommon = value;
                    OnPropertyChanged("IsCommon");
                    OnIsCommonChanged();
                }
            }
        }
        
        private long _iD = default(long);

        /// <summary>
        /// Gets the ID column value.
        /// </summary>
        [Column(Name="ID", Storage="_iD", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnIDChanging(value);
                    OnPropertyChanging("ID");
                    _iD = value;
                    OnPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        
        private long _fromID;

        /// <summary>
        /// Gets or sets the FromID column value.
        /// </summary>
        [Column(Name="FromID", Storage="_fromID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long FromID
        {
            get { return _fromID; }
            set
            {
                if (_fromID != value)
                {
                    OnFromIDChanging(value);
                    OnPropertyChanging("FromID");
                    _fromID = value;
                    OnPropertyChanged("FromID");
                    OnFromIDChanged();
                }
            }
        }
        
        private long _toID;

        /// <summary>
        /// Gets or sets the ToID column value.
        /// </summary>
        [Column(Name="ToID", Storage="_toID", DbType="bigint NOT NULL", CanBeNull=false)]
        public long ToID
        {
            get { return _toID; }
            set
            {
                if (_toID != value)
                {
                    OnToIDChanging(value);
                    OnPropertyChanging("ToID");
                    _toID = value;
                    OnPropertyChanged("ToID");
                    OnToIDChanged();
                }
            }
        }
        
        private Nullable<int> _friendType;

        /// <summary>
        /// Gets or sets the FriendType column value.
        /// </summary>
        [Column(Name="FriendType", Storage="_friendType", DbType="int")]
        public Nullable<int> FriendType
        {
            get { return _friendType; }
            set
            {
                if (_friendType != value)
                {
                    OnFriendTypeChanging(value);
                    OnPropertyChanging("FriendType");
                    _friendType = value;
                    OnPropertyChanged("FriendType");
                    OnFriendTypeChanged();
                }
            }
        }
        
        private Nullable<int> _friendSummary;

        /// <summary>
        /// Gets or sets the FriendSummary column value.
        /// </summary>
        [Column(Name="FriendSummary", Storage="_friendSummary", DbType="int")]
        public Nullable<int> FriendSummary
        {
            get { return _friendSummary; }
            set
            {
                if (_friendSummary != value)
                {
                    OnFriendSummaryChanging(value);
                    OnPropertyChanging("FriendSummary");
                    _friendSummary = value;
                    OnPropertyChanged("FriendSummary");
                    OnFriendSummaryChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when IsTrue is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsTrueChanging(bool value);
        /// <summary>Called after IsTrue has Changed.</summary>
        partial void OnIsTrueChanged();
        /// <summary>Called when IsCommon is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIsCommonChanging(bool value);
        /// <summary>Called after IsCommon has Changed.</summary>
        partial void OnIsCommonChanged();
        /// <summary>Called when ID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIDChanging(long value);
        /// <summary>Called after ID has Changed.</summary>
        partial void OnIDChanged();
        /// <summary>Called when FromID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFromIDChanging(long value);
        /// <summary>Called after FromID has Changed.</summary>
        partial void OnFromIDChanged();
        /// <summary>Called when ToID is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnToIDChanging(long value);
        /// <summary>Called after ToID has Changed.</summary>
        partial void OnToIDChanged();
        /// <summary>Called when FriendType is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFriendTypeChanging(Nullable<int> value);
        /// <summary>Called after FriendType has Changed.</summary>
        partial void OnFriendTypeChanged();
        /// <summary>Called when FriendSummary is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnFriendSummaryChanging(Nullable<int> value);
        /// <summary>Called after FriendSummary has Changed.</summary>
        partial void OnFriendSummaryChanged();
        #endregion
        
    }
}

