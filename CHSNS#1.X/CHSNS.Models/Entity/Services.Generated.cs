
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Diagnostics;

namespace CHSNS.Models
{
    /// <summary>
    /// The class representing the dbo.Services table.
    /// </summary>
    [Table(Name="dbo.Services")]
    public partial class Services
        : LinqEntityBase
    {
        
        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="Services"/> class.
        /// </summary>
        [DebuggerNonUserCodeAttribute()]
        public Services()
        {
            OnCreated();
        }
        #endregion
        
        #region Column Mapped Properties
        
        private long _id = default(long);

        /// <summary>
        /// Gets the id column value.
        /// </summary>
        [Column(Name="id", Storage="_id", DbType="bigint NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, CanBeNull=false)]
        public long Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnIdChanging(value);
                    OnPropertyChanging("Id");
                    _id = value;
                    OnPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        
        private string _body;

        /// <summary>
        /// Gets or sets the body column value.
        /// </summary>
        [Column(Name="body", Storage="_body", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
        public string Body
        {
            get { return _body; }
            set
            {
                if (_body != value)
                {
                    OnBodyChanging(value);
                    OnPropertyChanging("Body");
                    _body = value;
                    OnPropertyChanged("Body");
                    OnBodyChanged();
                }
            }
        }
        
        private string _answer;

        /// <summary>
        /// Gets or sets the Answer column value.
        /// </summary>
        [Column(Name="Answer", Storage="_answer", DbType="nvarchar(4000) NOT NULL", CanBeNull=false)]
        public string Answer
        {
            get { return _answer; }
            set
            {
                if (_answer != value)
                {
                    OnAnswerChanging(value);
                    OnPropertyChanging("Answer");
                    _answer = value;
                    OnPropertyChanged("Answer");
                    OnAnswerChanged();
                }
            }
        }
        
        private byte _status;

        /// <summary>
        /// Gets or sets the status column value.
        /// </summary>
        [Column(Name="status", Storage="_status", DbType="tinyint NOT NULL", CanBeNull=false)]
        public byte Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    OnStatusChanging(value);
                    OnPropertyChanging("Status");
                    _status = value;
                    OnPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        
        private System.DateTime _sendtime;

        /// <summary>
        /// Gets or sets the sendtime column value.
        /// </summary>
        [Column(Name="sendtime", Storage="_sendtime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Sendtime
        {
            get { return _sendtime; }
            set
            {
                if (_sendtime != value)
                {
                    OnSendtimeChanging(value);
                    OnPropertyChanging("Sendtime");
                    _sendtime = value;
                    OnPropertyChanged("Sendtime");
                    OnSendtimeChanged();
                }
            }
        }
        
        private System.DateTime _answertime;

        /// <summary>
        /// Gets or sets the Answertime column value.
        /// </summary>
        [Column(Name="Answertime", Storage="_answertime", DbType="smalldatetime NOT NULL", CanBeNull=false)]
        public System.DateTime Answertime
        {
            get { return _answertime; }
            set
            {
                if (_answertime != value)
                {
                    OnAnswertimeChanging(value);
                    OnPropertyChanging("Answertime");
                    _answertime = value;
                    OnPropertyChanged("Answertime");
                    OnAnswertimeChanged();
                }
            }
        }
        
        private long _userid;

        /// <summary>
        /// Gets or sets the userid column value.
        /// </summary>
        [Column(Name="userid", Storage="_userid", DbType="bigint NOT NULL", CanBeNull=false)]
        public long Userid
        {
            get { return _userid; }
            set
            {
                if (_userid != value)
                {
                    OnUseridChanging(value);
                    OnPropertyChanging("Userid");
                    _userid = value;
                    OnPropertyChanged("Userid");
                    OnUseridChanged();
                }
            }
        }
        
        private string _email;

        /// <summary>
        /// Gets or sets the Email column value.
        /// </summary>
        [Column(Name="Email", Storage="_email", DbType="nvarchar(50)")]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    OnEmailChanging(value);
                    OnPropertyChanging("Email");
                    _email = value;
                    OnPropertyChanged("Email");
                    OnEmailChanged();
                }
            }
        }
        #endregion
        
        #region Association Mapped Properties
        #endregion
        
        #region Extensibility Method Definitions
        /// <summary>Called when this instance is loaded.</summary>
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        partial void OnValidate(ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        partial void OnCreated();
        /// <summary>Called when Id is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnIdChanging(long value);
        /// <summary>Called after Id has Changed.</summary>
        partial void OnIdChanged();
        /// <summary>Called when Body is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnBodyChanging(string value);
        /// <summary>Called after Body has Changed.</summary>
        partial void OnBodyChanged();
        /// <summary>Called when Answer is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAnswerChanging(string value);
        /// <summary>Called after Answer has Changed.</summary>
        partial void OnAnswerChanged();
        /// <summary>Called when Status is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnStatusChanging(byte value);
        /// <summary>Called after Status has Changed.</summary>
        partial void OnStatusChanged();
        /// <summary>Called when Sendtime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnSendtimeChanging(System.DateTime value);
        /// <summary>Called after Sendtime has Changed.</summary>
        partial void OnSendtimeChanged();
        /// <summary>Called when Answertime is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnAnswertimeChanging(System.DateTime value);
        /// <summary>Called after Answertime has Changed.</summary>
        partial void OnAnswertimeChanged();
        /// <summary>Called when Userid is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnUseridChanging(long value);
        /// <summary>Called after Userid has Changed.</summary>
        partial void OnUseridChanged();
        /// <summary>Called when Email is changing.</summary>
        /// <param name="value">The new value.</param>
        partial void OnEmailChanging(string value);
        /// <summary>Called after Email has Changed.</summary>
        partial void OnEmailChanged();
        #endregion
        
    }
}

